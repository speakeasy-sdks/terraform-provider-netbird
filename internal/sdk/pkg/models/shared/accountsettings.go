// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type AccountSettings struct {
	// Allows propagate the new user auto groups to peers that belongs to the user
	GroupsPropagationEnabled *bool `json:"groups_propagation_enabled,omitempty"`
	// Name of the claim from which we extract groups names to add it to account groups.
	JwtGroupsClaimName *string `json:"jwt_groups_claim_name,omitempty"`
	// Allows extract groups from JWT claim and add it to account groups.
	JwtGroupsEnabled *bool `json:"jwt_groups_enabled,omitempty"`
	// Period of time after which peer login expires (seconds).
	PeerLoginExpiration int64 `json:"peer_login_expiration"`
	// Enables or disables peer login expiration globally. After peer's login has expired the user has to log in (authenticate). Applies only to peers that were added by a user (interactive SSO login).
	PeerLoginExpirationEnabled bool `json:"peer_login_expiration_enabled"`
}

func (o *AccountSettings) GetGroupsPropagationEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.GroupsPropagationEnabled
}

func (o *AccountSettings) GetJwtGroupsClaimName() *string {
	if o == nil {
		return nil
	}
	return o.JwtGroupsClaimName
}

func (o *AccountSettings) GetJwtGroupsEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.JwtGroupsEnabled
}

func (o *AccountSettings) GetPeerLoginExpiration() int64 {
	if o == nil {
		return 0
	}
	return o.PeerLoginExpiration
}

func (o *AccountSettings) GetPeerLoginExpirationEnabled() bool {
	if o == nil {
		return false
	}
	return o.PeerLoginExpirationEnabled
}

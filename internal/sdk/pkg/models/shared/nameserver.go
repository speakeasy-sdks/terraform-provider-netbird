// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NameserverNsType - Nameserver Type
type NameserverNsType string

const (
	NameserverNsTypeUDP NameserverNsType = "udp"
)

func (e NameserverNsType) ToPointer() *NameserverNsType {
	return &e
}

func (e *NameserverNsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "udp":
		*e = NameserverNsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NameserverNsType: %v", v)
	}
}

type Nameserver struct {
	// Nameserver IP
	IP string `json:"ip"`
	// Nameserver Type
	NsType NameserverNsType `json:"ns_type"`
	// Nameserver Port
	Port int64 `json:"port"`
}

func (o *Nameserver) GetIP() string {
	if o == nil {
		return ""
	}
	return o.IP
}

func (o *Nameserver) GetNsType() NameserverNsType {
	if o == nil {
		return NameserverNsType("")
	}
	return o.NsType
}

func (o *Nameserver) GetPort() int64 {
	if o == nil {
		return 0
	}
	return o.Port
}

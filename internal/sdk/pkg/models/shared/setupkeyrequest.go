// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type SetupKeyRequest struct {
	// List of group IDs to auto-assign to peers registered with this key
	AutoGroups []string `json:"auto_groups"`
	// Indicate that the peer will be ephemeral or not
	Ephemeral *bool `json:"ephemeral,omitempty"`
	// Expiration time in seconds
	ExpiresIn int64 `json:"expires_in"`
	// Setup Key name
	Name string `json:"name"`
	// Setup key revocation status
	Revoked bool `json:"revoked"`
	// Setup key type, one-off for single time usage and reusable
	Type string `json:"type"`
	// A number of times this key can be used. The value of 0 indicates the unlimited usage.
	UsageLimit int64 `json:"usage_limit"`
}

func (o *SetupKeyRequest) GetAutoGroups() []string {
	if o == nil {
		return []string{}
	}
	return o.AutoGroups
}

func (o *SetupKeyRequest) GetEphemeral() *bool {
	if o == nil {
		return nil
	}
	return o.Ephemeral
}

func (o *SetupKeyRequest) GetExpiresIn() int64 {
	if o == nil {
		return 0
	}
	return o.ExpiresIn
}

func (o *SetupKeyRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *SetupKeyRequest) GetRevoked() bool {
	if o == nil {
		return false
	}
	return o.Revoked
}

func (o *SetupKeyRequest) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *SetupKeyRequest) GetUsageLimit() int64 {
	if o == nil {
		return 0
	}
	return o.UsageLimit
}

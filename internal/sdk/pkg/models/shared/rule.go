// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type Rule struct {
	// Rule friendly description
	Description string `json:"description"`
	// Rule destination groups
	Destinations []GroupMinimum `json:"destinations"`
	// Rules status
	Disabled bool `json:"disabled"`
	// Rule flow, currently, only "bidirect" for bi-directional traffic is accepted
	Flow string `json:"flow"`
	// Rule ID
	ID string `json:"id"`
	// Rule name identifier
	Name string `json:"name"`
	// Rule source groups
	Sources []GroupMinimum `json:"sources"`
}

func (o *Rule) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *Rule) GetDestinations() []GroupMinimum {
	if o == nil {
		return []GroupMinimum{}
	}
	return o.Destinations
}

func (o *Rule) GetDisabled() bool {
	if o == nil {
		return false
	}
	return o.Disabled
}

func (o *Rule) GetFlow() string {
	if o == nil {
		return ""
	}
	return o.Flow
}

func (o *Rule) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Rule) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Rule) GetSources() []GroupMinimum {
	if o == nil {
		return []GroupMinimum{}
	}
	return o.Sources
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PrivateNetworkCheckAction - Action to take upon policy match
type PrivateNetworkCheckAction string

const (
	PrivateNetworkCheckActionAllow PrivateNetworkCheckAction = "allow"
	PrivateNetworkCheckActionDeny  PrivateNetworkCheckAction = "deny"
)

func (e PrivateNetworkCheckAction) ToPointer() *PrivateNetworkCheckAction {
	return &e
}

func (e *PrivateNetworkCheckAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allow":
		fallthrough
	case "deny":
		*e = PrivateNetworkCheckAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateNetworkCheckAction: %v", v)
	}
}

// PrivateNetworkCheck - Posture check for allow or deny private network
type PrivateNetworkCheck struct {
	// Action to take upon policy match
	Action PrivateNetworkCheckAction `json:"action"`
	// List of private network ranges in CIDR notation
	Ranges []string `json:"ranges"`
}

func (o *PrivateNetworkCheck) GetAction() PrivateNetworkCheckAction {
	if o == nil {
		return PrivateNetworkCheckAction("")
	}
	return o.Action
}

func (o *PrivateNetworkCheck) GetRanges() []string {
	if o == nil {
		return []string{}
	}
	return o.Ranges
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// Action to take upon policy match
type Action string

const (
	ActionAllow Action = "allow"
	ActionDeny  Action = "deny"
)

func (e Action) ToPointer() *Action {
	return &e
}

func (e *Action) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allow":
		fallthrough
	case "deny":
		*e = Action(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Action: %v", v)
	}
}

// GeoLocationCheck - Posture check for geo location
type GeoLocationCheck struct {
	// Action to take upon policy match
	Action Action `json:"action"`
	// List of geo locations to which the policy applies
	Locations []Location `json:"locations"`
}

func (o *GeoLocationCheck) GetAction() Action {
	if o == nil {
		return Action("")
	}
	return o.Action
}

func (o *GeoLocationCheck) GetLocations() []Location {
	if o == nil {
		return []Location{}
	}
	return o.Locations
}
